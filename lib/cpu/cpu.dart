library nes.cpu;

import 'dart:typed_data';

part "cpu_memory.dart";
part "state.dart";
part "hex_interpreter.dart";

/// different types of interrupt that can occur
enum InterruptType {
  /// happens when V-Blank occurs
  NMI,

  /// generated by memory mappers
  IRQ,

  /// happens during startup and resets
  RESET
}

/// Simulate a 6502 cpu
class CPU {
  final CPUMemory memory = new CPUMemory();
  final State state = new State();
  Interpreter _interpreter;

  CPU() {
    state.load_processor_status(0);
    _interpreter = new Interpreter(state, memory);
  }

  void interrupt(InterruptType type) {
    switch (type) {
      case InterruptType.IRQ:
        if (!state.interrupt_disable) {
          // if the interrupt disable flag is not set, set the state pc
          // new location is at $FFFE - $FFFF
          state.pc = _interpreter._read_16bit_addr(0xFFFE);
        }
        break;
      case InterruptType.NMI:
        if ((memory[0x2000] & 0x80) != 0) {
          // if bit 7 of PPU control register 1 is not clear, causes interrupt
          state.pc = _interpreter._read_16bit_addr(0xFFFA);
        }
        break;
      case InterruptType.RESET:
        state.pc = _interpreter._read_16bit_addr(0xFFFC);
        break;
    }
  }
}
